{"mappings":"gfACA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAE3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACPH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAbWQ,SAASC,cAAc,QA2C/BC,iBAAiB,UA1BzB,SAAsBC,GACpBA,EAAMC,iBAQN,IAPA,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALb,MAAOiB,EAAMJ,EAANI,OAAQC,EAAIL,EAAJK,KAEzBC,EAAWC,OAAOJ,EAAMK,OACxBC,EAAUF,OAAOF,EAAKG,OACtBE,EAAYH,OAAOH,EAAOI,OAErBG,EAAW,EAAGA,GAAYD,EAAWC,GAAY,EACxD1B,EAAc0B,EAAUR,GACrBS,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjB2B,QAAQC,IAAI,WACZhC,EAAAiC,OAAOC,QAAQ,uBAAwCC,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAE9DgC,OAAM,SAAAN,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClB2B,QAAQC,IAAI,SACZhC,EAAAiC,OAAOI,QAAQ,sBAAqCF,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAE9DmB,GAAYG,EAEdX,EAAMG,cAAcoB,QACpBP,QAAQC,IAAI,QAAST,GACrBQ,QAAQC,IAAI,OAAQN,GACpBK,QAAQC,IAAI,SAAUL,E","sources":["src/js/03-promises.js"],"sourcesContent":["// import resolver from 'bower-npm-resolver';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst formRef = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    \n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  }, delay);\n});\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  let {\n    elements: { delay, amount, step },\n  } = event.currentTarget;\n  let delayRef = Number(delay.value);\n  let stepRef = Number(step.value);\n  let amountRef = Number(amount.value);\n  \n  for (let position = 0; position <= amountRef; position += 1){\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log('success');\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log('error');\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayRef += stepRef;\n  }\n  event.currentTarget.reset();\n  console.log('delay', delayRef);  \n  console.log('step', stepRef);\n  console.log('amount', amountRef);\n}\nformRef.addEventListener('submit', onFormSubmit)"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","amount","step","delayRef","Number","value","stepRef","amountRef","position1","then","param","console","log","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.5bf0bb70.js.map"}